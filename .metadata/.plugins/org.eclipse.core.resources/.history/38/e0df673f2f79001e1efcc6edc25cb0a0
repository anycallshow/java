package edu.kh.array.practice;

import java.util.Arrays;
import java.util.Scanner;

public class ArrayPractice {

	public void  practice1() {
		// 길이가 9인 배열을 선언 및 할당하고, 1부터 9까지의 값을 반복문을 이용하여
		// 순서대로 배열의 각 인덱스 요소에 대입하고 출력한 후
		// 짝수 번째 인덱스 값의 합을 출력하세요. (0 번째 인덱스는 짝수로 취급)
		// [실행 화면]
		// 1 2 3 4 5 6 7 8 9
		// 짝수 번째 인덱스 합 : 25

		int[] arr = new int[9]; // 길이가 9인 배열선언 및 할당

		int sum = 0; // 합계 저장할 공간

		for(int i=0; i < arr.length; i++) { 
			arr[i] = i+1; 
			System.out.print(arr[i] + " ");

			if(i % 2 ==0) {
				sum += arr[i];
			}
		}
		System.out.println("\n짝수 번째 인덱스 합 : " + sum);
	}

	public void  practice2() {
		// 길이가 9인 배열을 선언 및 할당하고, 9부터 1까지의 값을 반복문을 이용하여
		// 순서대로 배열의 각 인덱스 요소에 대입하고 출력한 후
		// 홀수 번째 인덱스 값의 합을 출력하세요. (0 번째 인덱스는 짝수로 취급)
		// [실행 화면]
		// 9 8 7 6 5 4 3 2 1 
		// 홀수 번째 인덱스 합 : 20

		int[] arr = new int[9];

		int sum = 0; // 합계용 변수

		for(int i=0; i < arr.length; i++) {

			arr[i] = 9 - i; 
			System.out.print(arr[i] + " ");

			if(i % 2 != 0) {
				sum += arr[i];

			}
		}
		System.out.println("\n홀수 번째 인덱스 합 : " + sum);

	}

	public void  practice3() {
		// 사용자에게 입력 받은 양의 정수만큼 배열 크기를 할당하고
		// 1부터 입력 받은 값까지 배열에 초기화한 후 출력하세요
		// [실행 화면]
		// 양의 정수 : 5
		// 1 2 3 4 5 

		Scanner sc = new Scanner(System.in);

		System.out.print("양의 정수 : ");

		int input = sc.nextInt();
		int[] arr = new int[input];

		for(int i=0; i < arr.length; i++) {
			arr[i] = i+1;
			System.out.print(arr[i]+" ");
		}
	}

	public void  practice4() {
		// 정수 5개를 입력 받아 배열을 초기화 하고
		// 검색할 정수를 하나 입력 받아 배열에서 같은 수가 있는 인덱스를 찾아 출력.
		// 배열에 같은 수가 없을 경우 "일치하는 값이 존재하지 않습니다" 출력		
		// [실행 화면 1]				[실행 화면 2]
		// 입력 0 : 5					입력 0 : 5
		// 입력 1 : 8					입력 1 : 8
		// 입력 2 : 9					입력 2 : 9
		// 입력 3 : 10				입력 3 : 10
		// 입력 4 : 4					입력 4 : 4
		// 검색할 값 : 8				검색할 값 : 1
		// 인덱스 : 1					일치하는 값이 존재하지 않습니다.

		Scanner sc = new Scanner(System.in);

		int[] arr = new int[5];

		for(int i=0; i<arr.length; i++) {
			System.out.print("입력 " + i + " : ");
			arr[i] = sc.nextInt();
		}

		System.out.print("검색할 값 : ");
		int input = sc.nextInt();

		boolean flag = false;


		for(int i=0; i<arr.length; i++) {

			if(input == arr[i]) {
				System.out.print("인덱스 : " + i +" ");
				flag = true;
			}
		}
		if(!flag) {
			System.out.println("일치하는 값이 존재하지 않습니다.");
		}

	}
	public void  practice5() {
		// 문자열을 입력 받아 문자 하나하나를 배열에 넣고 검색할 문자가 문자열에 몇 개 들어가 있는지
		// 개수와 몇 번째 인덱스에 위치하는지 인덱스를 출력하세요.
		// [실행 화면]
		// 문자열 : application
		// 문자 : i
		// application에 i가 존재하는 위치(인덱스) : 4 8 
		// i 개수 : 2

		Scanner sc = new Scanner(System.in);

		System.out.print("문자열 : ");
		String input = sc.nextLine();

		System.out.print("문자 : ");
		char ch = sc.next().charAt(0); // 입력 받은 문자열에서 0번 인덱스 문자를 반환
		//			String -> char

		char[] arr = new char[input.length()]; // 입력 받은 문자열 길이 만큼의 배열 생성

		int count = 0; // input에 일치하는 ch가 몇개 있는지 카운트하는 변수 

		System.out.print(input + "에 "+ ch +"가 존재하는 위치(인덱스) : ");

		for(int i=0; i<arr.length; i++) {

			// 배열 대입
			arr[i] = input.charAt(i);
			// 입력 받은 문자열에서 i번째 인덱스 문자를 arr[i]에 대입 

			// 검색 + 카운트 
			if(arr[i] == ch) { // 검색 조건 
				count++;
				System.out.print(i+" ");
			}

		}
		System.out.println("\n" + ch + "개수 : " + count);
	}

	public void  practice6() {
		// 사용자가 배열의 길이를 직접 입력하여 그 값만큼 정수형 배열을 선언 및 할당하고
		// 배열의 크기만큼 사용자가 직접 값을 입력하여 각각의 인덱스에 값을 초기화 하세요.
		// 그리고 배열 전체 값을 나열하고 각 인덱스에 저장된 값들의 합을 출력하세요.
		// [실행 화면]
		// 정수 : 5
		// 배열 0번째 인덱스에 넣을 값 : 4
		// 배열 1번째 인덱스에 넣을 값 : -4
		// 배열 2번째 인덱스에 넣을 값 : 3
		// 배열 3번째 인덱스에 넣을 값 : -3
		// 배열 4번째 인덱스에 넣을 값 : 2
		// 4 -4 3 -3 2 
		// 총 합 : 2

		Scanner sc = new Scanner(System.in);

		System.out.print("정수 : ");
		int input = sc.nextInt();

		int[] arr = new int[input];

		int sum = 0;
		String value = "";
		for(int i=0; i < arr.length; i++) {

			System.out.print("배열" + i + "번째 인덱스에 넣을 값 : " );
			arr[i] = sc.nextInt();

			value += arr[i] + " ";
			sum += arr[i];

		}
		System.out.println(value);
		System.out.println("총합 : " + sum);
	}

	public void  practice7() {
		// 주민등록번호 번호를 입력 받아 char 배열에 저장한 후 출력하세요.
		// 단, char 배열 저장 시 성별을 나타내는 숫자 이후부터 *로 저장하세요.
		// [실행 화면]
		// 주민등록번호(-포함) : 123456-1234567
		// 123456-1******


		Scanner sc = new Scanner(System.in);

		System.out.print("주민등록번호(-포함) : ");
		String input = sc.nextLine();

		char[] arr = new char[input.length()]; // 문자열(주민번호)을 입력 받아 한 글자씩 잘라내어 char 배열에 순서대로 저장 

		for(int i=0; i < arr.length; i++) {
			arr[i] = input.charAt(i); // arr[i]에 입력 받은 문자열 중 i번째 문자를 대입

			if(i < 8) { // 인덱스 번호가 0,1,2,3,4,5,6,7 까지 입력받은 그대로 출력 
				System.out.print(arr[i]);
			} else { // == 인덱스 번호 8부터 나머지까지 '*'로 출력
				System.out.print('*');
			}

		}
	}

	public void  practice8() {

		Scanner sc = new Scanner(System.in);

		while(true) { // 3 이상의 수가 입력 될 때 까지 무한 반복 
			// -> 3 이상이 입력되면 break문으로 종료

			System.out.print("정수 : ");
			int input = sc.nextInt();

			if(input < 3 || input % 2 == 0) { // 3 미만 또는 짝수인 경우 -> 반복
				System.out.println("다시 입력하세요.");

			} else {
				// 입력 받은 정수 만큼의 크기를 가지는 배열 생성 
				int[] arr = new int[input];

				int num = 0; // arr 배열에 대입될 값

				for(int i=0; i<arr.length; i++) {

					if(i <= arr.length / 2) { // 중간 이전 까지 -> 증가
						arr[i] = ++num; // 대입하기 전에 ++ -> num == 1
					} else { // 중간 이후 -> 감소 
						arr[i] = --num;
					}

					// 출력 시 , 추가 (단, 마지막 제외)

					if(i == arr.length-1) { // 마지막 바퀴
						System.out.print(arr[i]);
					} else {
						System.out.print(arr[i] + ", ");
					}

				}
				break; // while문 반복 멈춤 

			}

		}

	}

	public void  practice9() {
		int[] arr = new int[10];

		System.out.print("발생한 난수 : ");

		for(int i=0;i < arr.length;i++) {
			arr[i] = (int)((Math.random() * 10 + 1) );
			System.out.print(arr[i] + " ");
		}
	}







	public void  practice13() {

		Scanner sc = new Scanner(System.in);

		System.out.print("문자열 : ");
		String input = sc.nextLine();

		char[] arr = new char[input.length()];
		
		System.out.print("문자열에 있는 문자 : ");
		
		for(int i=0; i<arr.length; i++) {
			arr[i] = input.charAt(i); // 문자열 -> char 배열에 옮겨 담기
			
			// 중복 검사 + flag
			// application
			// 배열 : [a, p, p, l, i, c, a, t, i, o, n]
			// 화면 : a, p, l, i, c, t, o, n
			// 개수 : 1  2  3  4  5  6  7  8
			
			boolean flag = true; // 신호용 변수 
			
			for(int x=0; x<i; x++) { // 중복 검사용 for문 
				if(arr[i] == arr[x]) {
					// 현재 대입된 문자가 앞서 대입된 문자와 같다면 == 중복
					flag = false; // 신호용 변수의 값을 false로 변경
					break;
				}
				
			}
		}

	}
}
